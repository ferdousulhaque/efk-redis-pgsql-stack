version: '3.3'

services:
    kibana:
      build:
        context: kibana/
        args:
          ELK_VERSION: $ELK_VERSION
      volumes:
        - ./kibana/kibana.yml:/usr/share/kibana/config/kibana.yml
      ports:
        - "5601:5601"
      networks:
        - elk
      depends_on:
        - elasticsearch
    elasticsearch:
      build:
        context: elasticsearch/
        args:
          ELK_VERSION: $ELK_VERSION
      ports:
      - "9200:9200"
      - "9300:9300"
      volumes:
        - ./elasticsearch/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml
      environment:
        ES_JAVA_OPTS: "-Xmx256m -Xms256m"
      networks:
        - elk
    fluentd:
      build:
        context: fluentd/
      ports:
        - "24224:24224"
        - "24224:24224/udp" 
      environment:
        - FLUENT_UID=1000 
      volumes:
        - ./fluentd/logger:/fluentd/log
        - ./fluentd/fluent.conf:/fluentd/etc/fluent.conf
      links:
        - elasticsearch
      networks:
        - elk
    redis:
      image: 'bitnami/redis:latest'
      ports:
        - "6379:6379"
      environment:
        - DISABLE_COMMANDS=FLUSHDB,FLUSHALL,CONFIG
        - ALLOW_EMPTY_PASSWORD=yes
      networks:
        - elk
    postgres:
      image: postgres:9.6
      container_name: postgresql
      environment:
        - POSTGRES_USER=postgres
        - POSTGRES_PASSWORD=Pass123!
        - POSTGRES_DB=napi
      volumes:
        - ./postgres/dbdata:/var/lib/postgresql/data
        - ./postgres/dbstructure/dbdump.sql:/docker-entrypoint-initdb.d/dbdump.sql
        # - ./postgres/dbdata/pg_hba.conf:/var/lib/postgresql/data/pg_hba.conf
        # - ./postgres/dbdata/postgres.conf:/var/lib/postgresql/data/postgres.conf
      ports:
        - "5432:5432"
      networks:
        - elk
    #mysql:
    #  image: mysql:5.7
    #  container_name: napi_mysql
    #  ports:
    #    - "3306:3306"
    #  command: --init-file /data/application/init.sql
    #  command: mysqld --plugin-load=mysqlx=mysqlx.so
    #  command: mysqld --default-authentication-plugin=mysql_native_password
    #  entrypoint: ['docker-entrypoint.sh', '--default-authentication-plugin=mysql_native_password']
    #  environment: 
    #    - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
    #    - MYSQL_DATABASE=${MYSQL_DATABASE}
    #    - MYSQL_USER=${MYSQL_USER}
    #    - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    #  volumes:
    #    - ./dbdata:/var/lib/mysql
    #    - ./dbstructure/dbdump.sql:/docker-entrypoint-initdb.d/dbdump.sql
networks:
  elk:
    # Use a custom driver
    driver: bridge